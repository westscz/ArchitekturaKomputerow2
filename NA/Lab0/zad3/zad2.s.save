.data 
SYSREAD = 0
SYSWRITE = 1
SYSEXIT = 60
STDOUT = 1
STDIN = 0
EXIT_SUCCESS = 0


.bss
.comm user_input, 512
.comm output, 512

.text
.globl _start

_start:
#read user input
nop
movq $SYSREAD, %rax
movq $STDIN, %rdi 
movq $user_input, %rsi
movq $512, %rdx
syscall

#---Change letters size---
#lower to uppercase
#uppercase to lowercase

;save user's input lenght to rdx
movq %rax, %rdx
#counting starts at 0, so we have to decrease the length by 1
dec %rdx
#rbx will be our counter - let's initialize it wth 0
movq $0, %rbx

#The loop
_startLoop:
#take current letter to rax
mov user_input(,%rbx,1), %rzax
#failed attempt at skiping space characters
cmp  $0x20, %rax
je _nospace
#change letter case with xor binary operation
xor $0x20, %rax
_nospace:
#take the letter back to it's place in buffer
mov %rax, output(,%rbx,1)
#increase counter
inc %rbx
#check ending condition
cmp %rbx, %rdx
#if not met - repeat loop
jne _startLoop
#---Change letters size---


#return user's input after modification
movq $SYSWRITE, %rax
movq $STDOUT, %rdi
movq $output, %rsi
movq $512, %rdx
syscall

#exit program on sucess
movq $SYSEXIT, %rax
movq $EXIT_SUCCESS, %rdi
syscall
